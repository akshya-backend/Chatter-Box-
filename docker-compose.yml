version: '3.8'

services:
  chat-app:
    build:
      context: .
      dockerfile: backend/Dockerfile
    volumes:
      - ./frontend:/frontend
      - backend-data:/app
    environment:
      - MONGODB_URL=mongodb://mongo:27017/ChatterBox
      - REDIS_SESSION_URL=redis://redis:6379
      - KAFKA_BROKERS=kafka:9092
      - IN_DOCKER=true

    ports:
      - "2000:2000"
    depends_on:
      - mongo
      - redis
      - kafka
    networks:
      - app-network

  mongo:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    ports:
      - "9092:9092"
      - "29092:29092"  # Additional port for external access if needed
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true' 
      KAFKA_NUM_PARTITIONS: 3 
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_MS: 86400000  
    depends_on:
      - zookeeper
    networks:
      - app-network

volumes:
  backend-data:
  mongo-data:
  redis-data:

networks:
  app-network:
    driver: bridge